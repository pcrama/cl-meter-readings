#+TITLE: Common Lisp Web Application to Register Meter Readings
#+AUTHOR: Philippe Crama

* Introduction

Minimal web application to learn web application programming in Common Lisp.

* Installation

** SBCL: a Common Lisp implementation and libraries
#+begin_src shell :exports code
  sudo apt install sbcl
  curl https://beta.quicklisp.org/quicklisp.lisp > /tmp/quicklisp.lisp
  curl https://beta.quicklisp.org/quicklisp.lisp.asc > /tmp/quicklisp.lisp.asc
  sbcl --load /tmp/quicklisp.lisp
#+end_src

Quicklisp proposes these installation instructions which I applied using
~(ql:add-to-init-file)~:
#+begin_example
  #-quicklisp
  (let ((quicklisp-init (merge-pathnames "quicklisp/setup.lisp"
                                         (user-homedir-pathname))))
    (when (probe-file quicklisp-init)
      (load quicklisp-init)))
#+end_example

I restarted sbcl, then installed hunchentoot and cl-who.

** As a system service

1. Add the [[file:doc/30-cl-meter-readings.conf][30-cl-meter-readings.conf]] file to the
   =/etc/lighttpd/conf-available/= directory and create a symlink to enable it:
   #+begin_src shell :exports code
     cd /etc/lighttpd/conf-enabled
     sudo ln -s ../conf-available/30-cl-meter-readings.conf
   #+end_src

2. Enable =mod_proxy= for lighttpd.

3. Put [[file:doc/cl-meter-readings.service][cl-meter-readings.service]] into the =/etc/systemd/system/= directory and
   enable the service =sudo systemctl enable cl-meter-readings=.  Customize
   the environment variables

   | TZ                                  | unset or eg Europe/Berlin |
   | LC_TIME                             | =fr_BE.UTF-8=             |
   | CL_METER_READINGS_STATIC_DIRECTORY  | path to static/ directory |
   | CL_METER_READINGS_DATA_FILE         | path to data-file         |
   | CL_METER_READINGS_SMA_INVERTER_HOST | =SMA3xxxxxxxx5=           |
   | CL_METER_READINGS_SMA_INVERTER_PATH | =dyn/getDashValues.json=  |
   | CL_METER_READINGS_SQL_PROGRAM       | =sqlite3 db.db=           |

   If your database resides on a different host accessible through SSH:
   1. Create a new key pair without a password
   2. Add your public key on the SSH host like this:
      #+begin_example
        command="sed -n -e's/;.*/;/' -e '/^SELECT /p' -e '/^INSERT /p' | sqlite3 db.db",restrict ssh-rsa AAAA...w58= sqlite3-key
      #+end_example
   3. Set =CL_METER_READINGS_SQL_PROGRAM= like this:
      #+begin_src shell :exports code
        export CL_METER_READINGS_SQL_PROGRAM="timeout 5 ssh -o RequestTty=no -o IdentityAgent=None -F none -i /home/pi/.ssh/id_rsa_sqlite3 user@host"
      #+end_src

** Deployment

#+begin_src shell :exports code
  git log --oneline | head -n 1 > src/version-comment.txt
  (cd src && tar cf - version-comment.txt *.lisp -C .. static/cl-meter-readings/) \
      | ssh pi@pi.hole 'dest_dir="$HOME/cl-meter-readings";
                        mkdir -p "$dest_dir";
                        tar xvf - -C "$dest_dir";
                        cd "$dest_dir";
                        sbcl --load basic.lisp --eval "(sb-ext:save-lisp-and-die \"$dest_dir/app.core\" :toplevel (function cl-meter-readings::main-with-sleep) :compression t)"'
#+end_src

* Data model
#+begin_example
  CREATE TABLE IF NOT EXISTS data_202208 (
    timestamp INTEGER PRIMARY KEY ASC,
    pv2012_kWh FLOAT,
    pv2022_kWh FLOAT,
    peak_conso_kWh FLOAT,
    off_conso_kWh FLOAT,
    gas_m3 FLOAT,
    water_m3 FLOAT
  );
  CREATE TABLE IF NOT EXISTS data_202303 (
    timestamp INTEGER PRIMARY KEY ASC,
    pv2012_kWh FLOAT,
    pv2022_kWh FLOAT,
    peak_conso_kWh FLOAT,
    off_conso_kWh FLOAT,
    peak_inj_kWh FLOAT,
    off_inj_kWh FLOAT,
    gas_m3 FLOAT,
    water_m3 FLOAT
  );
#+end_example

Detect data anomalies where a meter went backwards:
#+begin_src sql :exports code
  select datetime(sooner.timestamp, 'unixepoch'), datetime(later.timestamp, 'unixepoch')
  from data_202303 as later, data_202303 as sooner
  where later.timestamp > sooner.timestamp
        and (later.off_inj_kWh < sooner.off_inj_kWh
             or later.off_conso_kWh < sooner.off_conso_kWh
             or later.peak_inj_kWh < sooner.peak_inj_kWh
             or later.peak_conso_kWh < sooner.peak_conso_kWh
             or later.gas_m3 < sooner.gas_m3
             or later.water_m3 < sooner.water_m3
             or later.pv2012_kWh < sooner.pv2012_kWh
             or later.pv2022_kWh < sooner.pv2022_kWh);
#+end_src
